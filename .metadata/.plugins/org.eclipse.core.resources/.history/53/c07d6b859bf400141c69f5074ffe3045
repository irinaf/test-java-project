

package com.example.tests;



import java.util.*;
import java.util.List;

import  static org.testng.Assert.assertEquals;

import org.testng.annotations.Test;


	public class GroupCreationTests extends TestBase {
	  @Test
	  public void testNonEmptygroupCreation() throws Exception {
		 app.getNavigationHelper().openMainPage();
	     app.getNavigationHelper().gotoGroupPage();
	    
	     // save old
	     List<GroupData> oldList=app.getGroupHelper().getGrous();
	     
	     //action
	     app.getGroupHelper().initGroupCreation();
	    GroupData group = new GroupData();
	    group.name="aa";
	    group.header="header 1";
	    group.footer="footer 1";
		app.getGroupHelper().fillGroupForm(group);
	    app.getGroupHelper().submitGroupCreation();
	    app.getGroupHelper().returnToGroupPage();
	  
	    // save new
	    
	    List<GroupData> newList=app.getGroupHelper().getGrous(); 
	    //compare
	    
	    assertEquals(newList.size(),oldList.size()+1);
	    
	    oldList.add(group);
	    Collections.sort(oldList);
	    assertEquals(newList,oldList);
	  }
	
	  
  @Test
	  public void testEmptygroupCreation() throws Exception {
		 app.getNavigationHelper().openMainPage();
	     app.getNavigationHelper().gotoGroupPage();
	     

	     // save old
	     List<GroupData> oldList=app.getGroupHelper().getGrous();
	    
	   //action
	     GroupData group = new GroupData("", "", "");
	    app.getGroupHelper().initGroupCreation();
	    app.getGroupHelper().fillGroupForm( group);
	    app.getGroupHelper().submitGroupCreation();
	    app.getGroupHelper().returnToGroupPage();
	    
	    
	    
       // save new
	    
	    List<GroupData> newList=app.getGroupHelper().getGrous(); 
	    //compare
	    
	    assertEquals(newList.size(),oldList.size()+1);
	    
	    oldList.add(group);
	    Collections.sort(oldList);
	    assertEquals(newList,oldList);
	  }
	}
